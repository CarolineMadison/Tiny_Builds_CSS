@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {

    display: grid;
    place-content: center;
    height: 100vh;
    padding: 5px;
    background-color: black;
}

/* .wrap applied to entire cube
    https://developer.mozilla.org/en-US/docs/Web/CSS/perspective
*/
.wrap {
	perspective: 800px;
	perspective-origin: 50% 100px;
}

.wrapDeactivate {
	/* no more perspective */
	perspective: none;
	perspective-origin: 0 0;
}

/* cube container of cube faces */
.cube {
	position: relative;
	width: 200px;
	transform-style: preserve-3d;
}

/* a single cube face */
.cube div {
	position: absolute;
	width: 200px;
	height: 200px;
    background-color: white;
}

/* transformation code for single faces */
.back {
	transform: translateZ(-100px) rotateY(180deg);
}
.right {
	transform: rotateY(-270deg) translateX(100px);
	transform-origin: top right;
}
.left {
	transform: rotateY(270deg) translateX(-100px);
	transform-origin: center left;
}
.top {
	transform: rotateX(-90deg) translateY(-100px);
	transform-origin: top center;
}
.bottom {
	transform: rotateX(90deg) translateY(100px);
	transform-origin: bottom center;
}
.front {
	transform: translateZ(100px);
}

/* horizontal spin */
@keyframes spin {
	from { transform: rotateY(0); }
	to { transform: rotateY(360deg); }
}

.cube {
	animation: spin 5s infinite linear;
}

.cube:hover {
    animation: spin-vertical 5s infinite linear;
}

/* vertical spin */

@keyframes spin-vertical {
	from { transform: rotateX(0); }
	to { transform: rotateX(-360deg); }
}

.cube-wrap.vertical .cube {
	margin: 0 auto; /* keeps the cube centered */

	transform-origin: 0 100px;
	animation: spin-vertical 5s infinite linear;
}

.cube-wrap.vertical .top {
	transform: rotateX(-270deg) translateY(-100px);
}

.cube-wrap.vertical .back  {
	transform: translateZ(-100px) rotateX(180deg);
}

.cube-wrap.vertical .bottom {
	transform: rotateX(-90deg) translateY(100px);
}





